/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author vallerie
 */
public class VendorAddItem extends javax.swing.JFrame {

    /**
     * Creates new form VendorAddItem
     */
    
    private TableRowSorter<TableModel> sorter;
    
    public VendorAddItem() {
        initComponents();

        String filePath = Config.getFilePath("MenuListPath");
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel vendorTable = (DefaultTableModel) Table_FoodMenu.getModel();
            String line;

            while ((line = br.readLine()) != null) {
                String[] dataRow = line.split("/");
                if (dataRow.length == 4) { 
                    vendorTable.addRow(dataRow);
                }
            }
            br.close();
            
            sorter = new TableRowSorter<>(vendorTable);
            Table_FoodMenu.setRowSorter(sorter);
            
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "File not found: " + filePath);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error reading file: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        lbl_AddFoodItem = new javax.swing.JLabel();
        btn_Add = new javax.swing.JButton();
        lbl_FoodName = new javax.swing.JLabel();
        lbl_FoodID = new javax.swing.JLabel();
        lbl_Price = new javax.swing.JLabel();
        btn_Edit = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        btn_Back = new javax.swing.JButton();
        txt_FoodName = new javax.swing.JTextField();
        txt_FoodID = new javax.swing.JTextField();
        txt_Price = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_FoodMenu = new javax.swing.JTable();
        btn_Search = new javax.swing.JButton();
        txt_Search = new javax.swing.JTextField();
        lbl_VendorID = new javax.swing.JLabel();
        txt_VendorID = new javax.swing.JTextField();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_AddFoodItem.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lbl_AddFoodItem.setText("Add Food Item");

        btn_Add.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        lbl_FoodName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_FoodName.setText("FoodName : ");

        lbl_FoodID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_FoodID.setText("FoodID :");

        lbl_Price.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_Price.setText("Price : ");

        btn_Edit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_Edit.setText("Edit");
        btn_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditActionPerformed(evt);
            }
        });

        btn_Delete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        btn_Reset.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_Reset.setText("Reset");
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        btn_Back.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_Back.setText("Back");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        txt_Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PriceActionPerformed(evt);
            }
        });

        Table_FoodMenu.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        Table_FoodMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "VendorID", "FoodID", "FoodName", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table_FoodMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Table_FoodMenuMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table_FoodMenu);

        btn_Search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_Search.setText("Search");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        txt_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchActionPerformed(evt);
            }
        });

        lbl_VendorID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_VendorID.setText("VendorID :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(lbl_AddFoodItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_FoodName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_FoodName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_Price)
                                    .addComponent(lbl_FoodID)
                                    .addComponent(lbl_VendorID))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_FoodID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_Price, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(txt_VendorID, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Search))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Add)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Edit)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Delete)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Reset)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lbl_AddFoodItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_VendorID)
                    .addComponent(txt_VendorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_FoodID)
                    .addComponent(txt_FoodID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_FoodName)
                    .addComponent(txt_FoodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Price)
                    .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Search)
                    .addComponent(txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Edit)
                    .addComponent(btn_Delete)
                    .addComponent(btn_Reset)
                    .addComponent(btn_Add)
                    .addComponent(btn_Back))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PriceActionPerformed

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // TODO add your handling code here:
        
        if(txt_VendorID.getText().equals("")||txt_FoodID.getText().equals("")||txt_FoodName.getText().equals("")||txt_Price.getText().equals("")){
            JOptionPane.showMessageDialog(this,"please enter Complete Data");
        } else {
            String data[] = {txt_VendorID.getText(),txt_FoodID.getText(),txt_FoodName.getText(),txt_Price.getText()};
            DefaultTableModel VendorTable = (DefaultTableModel) Table_FoodMenu.getModel();
            
            VendorTable.addRow(data);
            txt_VendorID.setText("");
            txt_FoodID.setText("");
            txt_FoodName.setText("");
            txt_Price.setText("");
            
            try {
                String filePath = Config.getFilePath("MenuListPath");
                BufferedWriter writer = new BufferedWriter(new FileWriter(filePath, true)); // true for append mode

                // Example writing operation
                String Menu = String.join("/", data);
                writer.write(Menu);
                writer.newLine();

                writer.close();
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error occurred while writing to file: " + e.getMessage());
            }
        }
        
        
       
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel vendorTable = (DefaultTableModel) Table_FoodMenu.getModel();
    
        int selectedRow = Table_FoodMenu.getSelectedRow();

        if (selectedRow != -1) { 
            String newStoreName = txt_VendorID.getText();
            String newFoodID = txt_FoodID.getText();
            String newFoodName = txt_FoodName.getText();
            String newPrice = txt_Price.getText();

            vendorTable.setValueAt(newStoreName, selectedRow, 0);
            vendorTable.setValueAt(newFoodID, selectedRow, 1);
            vendorTable.setValueAt(newFoodName, selectedRow,2);
            vendorTable.setValueAt(newPrice, selectedRow, 3);

            // Update the text file
            updateTextFile(selectedRow, newStoreName, newFoodID, newFoodName, newPrice);

            JOptionPane.showMessageDialog(this, "Successfully Updated!");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to edit.");
        }
    } 

    private void updateTextFile(int row, String newStoreName, String newFoodID, String newFoodName, String newPrice) {
        try {
            String filePath = Config.getFilePath("MenuListPath");
            File file = new File(filePath);

            BufferedReader br = new BufferedReader(new FileReader(file));
            String[] lines = br.lines().toArray(String[]::new);
            br.close();

            String updatedLine = newStoreName + "/" + newFoodID + "/" + newFoodName + "/" + newPrice;
            lines[row] = updatedLine;

            // Write the updated array back to the file
            BufferedWriter writer = new BufferedWriter(new FileWriter(filePath, false)); // false for not append mode

            for (String line : lines) {
                writer.write(line);
                writer.newLine();
            }

            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while writing to file: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_EditActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel VendorTable = (DefaultTableModel) Table_FoodMenu.getModel();
        
        if(Table_FoodMenu.getSelectedRowCount() == 1){
            VendorTable.removeRow(Table_FoodMenu.getSelectedRow());
        } else{
            if(Table_FoodMenu.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(this,"Table is empty");
            }else{
                JOptionPane.showMessageDialog(this,"Haven't select any table");
            }
        }
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed
        // TODO add your handling code here:
        txt_VendorID.setText("");
        txt_FoodID.setText("");
        txt_FoodName.setText("");
        txt_Price.setText("");
    }//GEN-LAST:event_btn_ResetActionPerformed

    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        VendorMain af= new VendorMain();
        af.setVisible(true);
    }//GEN-LAST:event_btn_BackActionPerformed

    private void Table_FoodMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_FoodMenuMouseReleased
        // TODO add your handling code here:
        DefaultTableModel VendorTable = (DefaultTableModel) Table_FoodMenu.getModel();
       
        String StoreName = VendorTable.getValueAt(Table_FoodMenu.getSelectedRow(), 0).toString();
        String FoodID = VendorTable.getValueAt(Table_FoodMenu.getSelectedRow(), 1).toString();
        String FoodName = VendorTable.getValueAt(Table_FoodMenu.getSelectedRow(), 2).toString();
        String Price = VendorTable.getValueAt(Table_FoodMenu.getSelectedRow(), 3).toString();
        
        txt_VendorID.setText(StoreName);
        txt_FoodID.setText(FoodID);
        txt_FoodName.setText(FoodName);
        txt_Price.setText(Price);
    }//GEN-LAST:event_Table_FoodMenuMouseReleased
    
    private void filterTable(String searchText) {
        RowFilter<TableModel, Object> rowFilter = new RowFilter<TableModel, Object>() {
            public boolean include(Entry<? extends TableModel, ? extends Object> entry) {
                for (int i = entry.getValueCount() - 1; i >= 0; i--) {
                    if (entry.getStringValue(i).equals(searchText)) {
                        return true;
                    }
                }
                return false;
            }
        };
    sorter.setRowFilter(rowFilter);
    }
        
    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
        // TODO add your handling code here:
        String searchText = txt_Search.getText();
        filterTable(searchText);
    }//GEN-LAST:event_btn_SearchActionPerformed

    private void txt_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorAddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorAddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorAddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorAddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendorAddItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_FoodMenu;
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Edit;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_AddFoodItem;
    private javax.swing.JLabel lbl_FoodID;
    private javax.swing.JLabel lbl_FoodName;
    private javax.swing.JLabel lbl_Price;
    private javax.swing.JLabel lbl_VendorID;
    private javax.swing.JTextField txt_FoodID;
    private javax.swing.JTextField txt_FoodName;
    private javax.swing.JTextField txt_Price;
    private javax.swing.JTextField txt_Search;
    private javax.swing.JTextField txt_VendorID;
    // End of variables declaration//GEN-END:variables
}
