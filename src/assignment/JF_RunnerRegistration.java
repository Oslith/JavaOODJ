/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment;

import Classes.Administrator;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class JF_RunnerRegistration extends javax.swing.JFrame {

        private Administrator admin;
        private String VendorUsername;
        private boolean isMale;
    /**
     * Creates new form JF_VendorRegistration
     */
    public JF_RunnerRegistration() {
        Administrator admin = new Administrator("Guest", "12345678", "Guest", "123456789012");
        this.admin = admin;
        initComponents();
        JRMale.setSelected(true);
        
        String filePath = Config.getFilePath("UserListPath");
        File file = new File(filePath);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel RunnerTable = (DefaultTableModel) JTRunner.getModel();
            Object[] tableLines = br.lines().toArray();
        
            for(int i=0 ; i < tableLines.length ; i++){
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                if (dataRow[0].equals("Runner")){
                    String[] VendorData = {dataRow[1],dataRow[2],dataRow[3],dataRow[4],dataRow[5],dataRow[6],dataRow[7],dataRow[8]};
                    RunnerTable.addRow(VendorData);
                }else continue;
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"The Password doesn't match");
        }
    }
    
        public JF_RunnerRegistration(Administrator admin) {
        this.admin = admin;
        initComponents();
        
        String filePath = Config.getFilePath("UserListPath");
        File file = new File(filePath);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel RunnerTable = (DefaultTableModel) JTRunner.getModel();
            Object[] tableLines = br.lines().toArray();
        
            for(int i=0 ; i < tableLines.length ; i++){
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                if (dataRow[0].equals("Runner")){
                    String[] VendorData = {dataRow[1],dataRow[2],dataRow[3],dataRow[4],dataRow[5],dataRow[6],dataRow[7],dataRow[8]};
                    RunnerTable.addRow(VendorData);
                }else continue;
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"The Password doesn't match");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Roles = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JFUsername = new javax.swing.JTextField();
        JFDOB = new javax.swing.JTextField();
        JFBalance = new javax.swing.JTextField();
        JFPhoneNumber = new javax.swing.JTextField();
        JFPassword = new javax.swing.JTextField();
        JFPassword2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTRunner = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        JFAddress = new javax.swing.JTextField();
        JBAdd = new javax.swing.JButton();
        JBEdit = new javax.swing.JButton();
        JBDelete = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        JFName = new javax.swing.JTextField();
        JB_Back = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        JRMale = new javax.swing.JRadioButton();
        JRFemale = new javax.swing.JRadioButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Roles.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Roles.setText("Runner");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Address");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Username:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Phone Number :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Date of Birth :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Password :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Confirm Password :");

        JFUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFUsernameActionPerformed(evt);
            }
        });

        JFPassword2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFPassword2ActionPerformed(evt);
            }
        });

        JTRunner.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Name", "PhoneNumber", "DoB", "Gender", "Address", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        JTRunner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTRunnerMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                JTRunnerMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(JTRunner);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Balance :");

        JBAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JBAdd.setText("Add");
        JBAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAddActionPerformed(evt);
            }
        });

        JBEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JBEdit.setText("Edit");
        JBEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBEditActionPerformed(evt);
            }
        });

        JBDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JBDelete.setText("Delete");
        JBDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBDeleteActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Name:");

        JB_Back.setText("Back");
        JB_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_BackActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Gender:");

        JRMale.setText("Male");
        JRMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRMaleActionPerformed(evt);
            }
        });

        JRFemale.setText("Female");
        JRFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRFemaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JB_Back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(Roles, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(49, 49, 49)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(JFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(JFUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JFPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(JBAdd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JBEdit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JBDelete)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JFName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JRFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JFDOB)
                                    .addComponent(JFPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(JRMale, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JFAddress)
                                    .addComponent(JFBalance))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JB_Back)
                        .addGap(3, 3, 3)
                        .addComponent(Roles, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JFUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JFPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JFPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JFDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(JRMale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JRFemale)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(JFAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(JFBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBAdd)
                    .addComponent(JBEdit)
                    .addComponent(JBDelete))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JFPassword2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFPassword2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JFPassword2ActionPerformed

    private void JBDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RunnerTable = (DefaultTableModel) JTRunner.getModel();
        String Username = JFUsername.getText();

        if (JTRunner.getSelectedRowCount() == 1) {
            String filePath = Config.getFilePath("UserListPath");
            File file = new File(filePath);
            List<String> lines = new ArrayList<>();
            String lineToRemove = "";

            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                String line;
                while ((line = br.readLine()) != null) {
                    lines.add(line);
                    String[] dataRow = line.split("/");
                    if ("Runner".equals(dataRow[0]) && dataRow[1].equals(Username)) {
                        lineToRemove = line;
                    }
                }
                br.close();

                // Remove the identified line
                if (!lineToRemove.isEmpty()) {
                    lines.remove(lineToRemove);
                    // Write the remaining lines back to the file
                    BufferedWriter bw = new BufferedWriter(new FileWriter(file));
                    for (String l : lines) {
                        bw.write(l + System.lineSeparator());
                    }
                    bw.close();
                    // Remove row from the table
                    RunnerTable.removeRow(JTRunner.getSelectedRow());
                }

            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "File not found.");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error reading or writing file.");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Haven't selected any table.");
        }
    }//GEN-LAST:event_JBDeleteActionPerformed

    private void JBEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBEditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RunnerTable = (DefaultTableModel) JTRunner.getModel();
        if (JTRunner.getSelectedRowCount() == 1) {
        String Username = JFUsername.getText();
        String Password = JFPassword.getText();
        String Name = JFName.getText();
        String PhoneNumber = JFPhoneNumber.getText();
        String dob = JFDOB.getText();
        String Gender;
        if (isMale){
            Gender = "Male";
        }else Gender = "Female";
        String Address = JFAddress.getText();
        String Balance = JFBalance.getText();
        int selectedRow = JTRunner.getSelectedRow();

        RunnerTable.setValueAt(Username, selectedRow, 0);
        RunnerTable.setValueAt(Password, selectedRow, 1);
        RunnerTable.setValueAt(Name, selectedRow, 2);
        RunnerTable.setValueAt(PhoneNumber, selectedRow, 3);
        RunnerTable.setValueAt(dob, selectedRow, 4);
        RunnerTable.setValueAt(Gender, selectedRow, 5);
        RunnerTable.setValueAt(Address, selectedRow, 6);
        RunnerTable.setValueAt(Balance, selectedRow, 7);

        String filePath = Config.getFilePath("UserListPath");
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            List<String> lines = new ArrayList<>();
            String line;

            // Read all lines from the file
            while ((line = br.readLine()) != null) {
                lines.add(line);
            }

            br.close();

            // Find the correct line based on the username
            for (int i = 0; i < lines.size(); i++) {
                String[] data = lines.get(i).split("/");
                if (data.length > 1 && data[1].equals(VendorUsername)) {
                    // Update the selected row data in the list
                    String userType = data[0];
                    String updatedLine = userType + "/" +
                            Username + "/" +
                            Password + "/" +
                            Name + "/" +
                            PhoneNumber + "/" +
                            dob + "/" +
                            Gender + "/" +
                            Address + "/" +
                            Balance;

                    lines.set(i, updatedLine);

                    // Write the updated list back to the file
                    BufferedWriter bw = new BufferedWriter(new FileWriter(file));
                    for (String updated : lines) {
                        bw.write(updated + "\n");
                    }

                    bw.close();

                    clearTextField();
                    
                    JFPassword2.setText("");
                    JFName.setText("");
                  
                    JOptionPane.showMessageDialog(this, "Successfully Updated!");
                    return;
                }
            }

            JOptionPane.showMessageDialog(this, "Username not found in the text file");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error updating text file: " + ex.getMessage());
        }
    } else {
        if (JTRunner.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is empty");
        } else {
            JOptionPane.showMessageDialog(this, "Haven't selected any table row");
        }
    }
    }//GEN-LAST:event_JBEditActionPerformed

   
    private void JBAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAddActionPerformed
        // TODO add your handling code here:
        String Username = JFUsername.getText();
        String Password = JFPassword.getText();
        String Password2 = JFPassword2.getText();
        String Name = JFName.getText();
        String PhoneNumber = JFPhoneNumber.getText();
        String dob = JFDOB.getText();
        String Gender;
        if (isMale){
            Gender = "Male";
        }else Gender = "Female";
        String Address = JFAddress.getText();
        String Balance = JFBalance.getText();
        
        String StoreName = JFAddress.getText();
        String Location = JFDOB.getText();
        DefaultTableModel RunnerTable = (DefaultTableModel) JTRunner.getModel();
        if(JFUsername.getText().equals("")||JFPassword.getText().equals("")||JFPassword2.getText().equals("")||JFPhoneNumber.getText().equals("")||JFDOB.getText().equals("")||JFAddress.getText().equals("")|| JFBalance.getText().equals("")){
            JOptionPane.showMessageDialog(this,"please enter Complete Data");
        } else if(!Password2.equals(Password)){
            JOptionPane.showMessageDialog(this,"The Password doesn't match");
        } else if (admin.CheckDup(this,RunnerTable,Username,StoreName,Location,PhoneNumber)) {
        }else {
            
            String data[] = {Username,Password,Name,PhoneNumber,dob,Gender,Address,Balance};
            

            
            RunnerTable.addRow(data);
            JFUsername.setText("");
            JFDOB.setText("");
            JFBalance.setText("");
            JFAddress.setText("");
            JFPhoneNumber.setText("");
            JFPassword.setText("");
            JFPassword2.setText("");
            JFName.setText("");
            
            String filePath = Config.getFilePath("UserListPath");
            
                   
        try (FileWriter fileWriter = new FileWriter(filePath, true);
                BufferedWriter bufferedWriter = new BufferedWriter(fileWriter)) {

            // Construct the data string
            String datas = "Runner/" + String.join("/", data);

            // Append the data to the file
            bufferedWriter.write(datas);
            bufferedWriter.newLine();  // Add a newline for clarity or to separate entries
            bufferedWriter.flush();   // Flush the buffer to ensure data is written

            System.out.println("Data has been appended to the file.");

        } catch (IOException e) {
            e.printStackTrace();
        }
        }
        
           
        
    }//GEN-LAST:event_JBAddActionPerformed

    private void JTRunnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTRunnerMouseClicked

    }//GEN-LAST:event_JTRunnerMouseClicked

    private void JTRunnerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTRunnerMouseReleased
        // TODO add your handling code here:
        DefaultTableModel RunnerTable = (DefaultTableModel) JTRunner.getModel();
        String Username = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 0).toString();
        String Password = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 1).toString();
        String Name = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 2).toString();
        String PhoneNumber = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 3).toString();
        String DOB = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 4).toString();
        String Gender = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 5).toString();
        String Address = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 6).toString();
        String Balance = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 7).toString();
        
        JFUsername.setText(Username);
        JFPassword.setText(Password);
        JFName.setText(Name);
        JFPhoneNumber.setText(PhoneNumber);
        JFDOB.setText(DOB);
        if (Gender.equals("Female")){
            JRFemale.setSelected(true);
            JRMale.setSelected(false);
        }else if (Gender.equals("Male")){
            JRFemale.setSelected(false);
            JRMale.setSelected(true);
        }
        JFAddress.setText(Address);
        JFBalance.setText(Balance);
        
        
        VendorUsername = RunnerTable.getValueAt(JTRunner.getSelectedRow(), 0).toString();
        
        
    }//GEN-LAST:event_JTRunnerMouseReleased

    private void JFUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFUsernameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_JFUsernameActionPerformed

    private void JB_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_BackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        JFrame newFrame = new JF_UserRegistration(admin);
        newFrame.setVisible(true);
    }//GEN-LAST:event_JB_BackActionPerformed

    private void JRMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRMaleActionPerformed
        // TODO add your handling code here:
        isMale = true;
        JRFemale.setSelected(false);
        JRMale.setSelected(true);
    }//GEN-LAST:event_JRMaleActionPerformed

    private void JRFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRFemaleActionPerformed
        // TODO add your handling code here:
        isMale = true;
        JRFemale.setSelected(true);
        JRMale.setSelected(false);
    }//GEN-LAST:event_JRFemaleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JF_RunnerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JF_RunnerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JF_RunnerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JF_RunnerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JF_RunnerRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBAdd;
    private javax.swing.JButton JBDelete;
    private javax.swing.JButton JBEdit;
    private javax.swing.JButton JB_Back;
    private javax.swing.JTextField JFAddress;
    private javax.swing.JTextField JFBalance;
    private javax.swing.JTextField JFDOB;
    private javax.swing.JTextField JFName;
    private javax.swing.JTextField JFPassword;
    private javax.swing.JTextField JFPassword2;
    private javax.swing.JTextField JFPhoneNumber;
    private javax.swing.JTextField JFUsername;
    private javax.swing.JRadioButton JRFemale;
    private javax.swing.JRadioButton JRMale;
    private javax.swing.JTable JTRunner;
    private javax.swing.JLabel Roles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void clearTextField() {
        JFUsername.setText("");
        JFDOB.setText("");
        JFBalance.setText("");
        JFAddress.setText("");
        JFPhoneNumber.setText("");
        JFPassword.setText("");
        
    }


}
